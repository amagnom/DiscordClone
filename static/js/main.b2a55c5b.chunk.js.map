{"version":3,"sources":["components/Layout/styles.ts","components/ServerButton/styles.ts","assets/Logo.svg","components/ServerButton/index.tsx","components/ServerList/styles.ts","components/ServerList/index.tsx","components/ServerName/styles.ts","components/ServerName/index.tsx","components/ChannelInfo/styles.ts","components/ChannelInfo/index.tsx","components/ChannelButton/styles.ts","components/ChannelButton/index.tsx","components/ChannelList/styles.ts","components/ChannelList/index.tsx","components/UserInfo/styles.ts","components/UserInfo/index.tsx","components/UserList/styles.ts","components/UserList/index.tsx","components/ChannelMessage/styles.ts","components/ChannelMessage/index.tsx","components/ChannelData/styles.ts","components/ChannelData/index.tsx","components/Layout/index.tsx","styles/GlobalStyles.ts","App.tsx","index.tsx"],"names":["Grid","styled","div","Button","button","props","isHome","hasNotifications","mentions","ServerButton","selected","className","src","Logo","alt","Container","Separator","ServerList","Title","h1","ExpandIcon","ExpandMore","ServerName","HashtagIcon","Hashtag","Description","span","ChannelInfo","InviteIcon","PersonAdd","SettingsIcon","Settings","ChannelButton","channelName","Category","AddCategoryIcon","Add","ChannelList","Profile","Avatar","UserData","Icons","MicIcon","Mic","HeadphoneIcon","Headset","UserInfo","Role","User","UserRow","nickname","isBot","UserList","Message","Header","Content","Mention","ChannelMessage","author","date","content","hasMention","Messages","InputWrapper","Input","input","InputIcon","AlternateEmail","ChannelData","messagesRef","useRef","useEffect","current","scrollTop","scrollHeight","ref","Array","from","keys","map","n","type","placeholder","Layout","createGlobalStyle","App","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2a55c5b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n\r\n\r\n//SL - Server List \r\n//SN - Server Name \r\n//CI - Channel Info \r\n//CL - Channel List \r\n//CD - Channel Data \r\n//UL - User List\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n\r\n  //Fica em ordem la da declaração os  tamanhos das colunas\r\n  grid-template-columns: 71px 240px auto 240px;\r\n\r\n  grid-template-rows: 46px auto 52px;\r\n\r\n//Aqui vai a declaração dos grid, dividimos em 3 linhas e 4 colunas\r\n//os grids\r\n\r\n  grid-template-areas : \r\n  'SL SN CI CI'\r\n  'SL CL CD UL'\r\n  'SL UI CD UL';\r\n\r\n  height: 100vh;\r\n`;\r\n\r\n","import styled from 'styled-components';\r\n\r\nimport { Props } from '.';\r\n\r\nconst Button = styled.button<Props>`\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\nflex-shrink: 0;\r\n\r\nwidth: 48px;\r\nheight: 48px;\r\n\r\nmargin-bottom: 8px;\r\nborder-radius: 50%;\r\nbackground-color: ${props => props.isHome ? 'var(--rocketseat)' : 'var(--primary)'};\r\n\r\nposition: relative;\r\ncursor: pointer;\r\n\r\n> img {\r\n    width: 24px;\r\n    height: 24px;\r\n}\r\n\r\n&::before{\r\nwidth:9px;\r\nheight:9px;\r\nposition:absolute;\r\nleft:--17px;\r\ntop:calc(50%-4.5px);\r\nbackground-color: var(--white);\r\nborder-radius: 50%;\r\n\r\ncontent: '';\r\ndisplay: ${(props) => (props.hasNotifications ? 'inline' : 'none')}\r\n}\r\n\r\n\r\n\r\n&::after{\r\n    background-color: var(--notification);\r\n    width: auto;\r\n    height: 16px;\r\n    padding: 0 4px;\r\n    position: absolute;\r\n    bottom: -4px;\r\n    right: -4px;\r\n    border-radius: 12px;\r\n    border: 4px solid var(--quaternary);\r\n\r\n    text-align: right;\r\n    font-size: 13px;\r\n    font-weight: bold;\r\n    color: var(--white);\r\n\r\n    content: '${(props) => props.mentions && props.mentions}';\r\n    display: ${(props) =>\r\n        props.mentions && props.mentions > 0 ? 'inline' : 'none'};\r\n}\r\n\r\ntransition: border-radius .2s, background-color .2s;\r\n\r\n&.active, &:hover{\r\n    border-radius: 16px;\r\n    background-color: ${props => props.isHome ? 'var(--rocketseat)' : 'var(--discord)'}\r\n}\r\n\r\n`;\r\n\r\nexport default Button;","export default __webpack_public_path__ + \"static/media/Logo.f074d17a.svg\";","import React from 'react';\r\n\r\nimport Button from './styles';\r\nimport Logo from \"../../assets/Logo.svg\";\r\n\r\n//propriedades do lado dos itens\r\nexport interface Props {\r\n    selected?: boolean;\r\n    isHome?: boolean;\r\n    hasNotifications?: boolean;\r\n    mentions?: number;\r\n}\r\n\r\nconst ServerButton: React.FC<Props> = ({ selected, isHome, hasNotifications, mentions }) => {\r\n    return (\r\n        <Button\r\n            isHome={isHome}\r\n            hasNotifications={hasNotifications}\r\n            mentions={mentions}\r\n            className={selected ? 'active' : ''}\r\n        >\r\n            {isHome && <img src={Logo} alt=\"Rocketseat\" />}\r\n          \r\n\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default ServerButton;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  grid-area: SL;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: var(--tertiary);\r\n  padding: 11px 0;\r\n  max-height: 100vh;\r\n  overflow-y: scroll;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n  width: 32px;\r\n  border-bottom: 2px solid var(--quaternary);\r\n  margin-bottom: 8px;\r\n`;","import React from 'react';\r\n\r\nimport ServerButton from '../ServerButton';\r\n\r\nimport { Container, Separator } from './styles';\r\n\r\nconst ServerList: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <ServerButton isHome />\r\n\r\n      <Separator />\r\n\r\n      <ServerButton />\r\n      <ServerButton hasNotifications />\r\n      <ServerButton mentions={3} />\r\n      <ServerButton />\r\n      <ServerButton />\r\n      <ServerButton />\r\n      <ServerButton hasNotifications />\r\n      <ServerButton />\r\n      <ServerButton />\r\n      <ServerButton mentions={72} />\r\n      <ServerButton />\r\n      <ServerButton />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ServerList;","import styled from 'styled-components';\r\n\r\nimport { ExpandMore } from 'styled-icons/material';\r\n\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 11px 0 16px;\r\n  background-color: var(--secondary);\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n  z-index: 2;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: var(--white);\r\n`;\r\n\r\nexport const ExpandIcon = styled(ExpandMore)`\r\n  width: 28px;\r\n  height: 28px;\r\n  color: var(--white);\r\n  cursor: pointer;\r\n`;","import React from 'react';\r\n\r\nimport { Container, Title, ExpandIcon } from './styles';\r\n\r\n\r\n\r\nconst ServerName: React.FC = () => {\r\n    return (\r\n      <Container>\r\n        <Title>Servidor do Rodz</Title>\r\n  \r\n        <ExpandIcon />\r\n      </Container>\r\n    );\r\n  };\r\n  \r\n\r\n\r\nexport default ServerName;\r\n\r\n\r\n/*\r\nExportando com JS exemplo\r\nexport default function(){\r\n    return(<div>Ola</div>)\r\n}\r\n*/\r\n\r\n\r\n\r\n","import styled from \"styled-components\";\r\nimport { Hashtag } from 'styled-icons/heroicons-outline';\r\n\r\n\r\n\r\n\r\n\r\nexport const Container = styled.div`\r\n  grid-area: CI;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0 17px;\r\n  background-color: var(--primary);\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n  z-index: 2;\r\n`;\r\n\r\nexport const HashtagIcon = styled(Hashtag)`\r\n  width: 24px;\r\n  height: 24px;\r\n  color: var(--symbol);\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  margin-left: 9px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  color: var(--white);\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n  height: 24px;\r\n  width: 1px;\r\n  background-color: var(--white);\r\n  opacity: 0.2;\r\n  margin: 0 13px;\r\n`;\r\n\r\nexport const Description = styled.span`\r\n  font-size: 15px;\r\n  color: var(--gray);\r\n`;","import React from 'react';\r\n\r\nimport { Container, HashtagIcon, Title, Separator, Description} from './styles';\r\n\r\n\r\n//Exportando com TS\r\nconst ChannelInfo: React.FC = () => {\r\n    return (\r\n      <Container>\r\n        <HashtagIcon />\r\n  \r\n        <Title>chat-livre</Title>\r\n  \r\n        <Separator />\r\n  \r\n        <Description>Canal aberto para conversas</Description>\r\n      </Container>\r\n    );\r\n  };\r\n\r\n\r\n\r\nexport default ChannelInfo;\r\n\r\n\r\n/*\r\nExportando com JS exemplo\r\nexport default function(){\r\n    return(<div>Ola</div>)\r\n}\r\n*/\r\n\r\n\r\n\r\n","import styled from 'styled-components';\r\nimport { Hashtag } from 'styled-icons/heroicons-outline';\r\nimport { PersonAdd, Settings } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n  padding: 5px 3px;\r\n  border-radius: 5px;\r\n  background-color: transparent;\r\n  transition: background-color 0.2s;\r\n \r\n \r\n  //TA INDO DENTRO DO CONTAINER LÁ DO INDEX, E SELECIONANDO A DIV, ESSE STYLE VAI P ELA\r\n  > div {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n \r\n  //TA INDO DENTRO DO CONTAINER LÁ DO INDEX, E SELECIONANDO A DIV E ENTAO O SPAN DENTRO DELA E\r\n  //COLOCANDO O STYLE NELA\r\n  > div span {\r\n    margin-left: 5px;\r\n    color: var(--senary);\r\n  }\r\n \r\n \r\n //EVENTOS DE HOVER OU CLICAR NO CANAL, MUDA A COR DO FUNDO, E DO SPAN\r\n  &:hover,&.active {\r\n    background-color: var(--quinary);\r\n    > div span {\r\n      color: var(--white);\r\n    }\r\n  }\r\n  \r\n`;\r\n\r\n//Passa o icone como parametro p funcao\r\nexport const HashtagIcon = styled(Hashtag)`\r\n  width: 20px;\r\n  height: 20px;\r\n  color: var(--symbol);\r\n`;\r\n\r\n\r\n//Passa o icone como parametro p funcao\r\nexport const InviteIcon = styled(PersonAdd)`\r\n  width: 16px;\r\n  height: 16px;\r\n  color: var(--symbol);\r\n  cursor: pointer;\r\n  transition: color 0.2s;\r\n\r\n  //Evento de hover vai mudar a cor\r\n  &:hover {\r\n    color: var(--white);\r\n  }\r\n`;\r\n\r\n\r\n//Passa o icone como parametro p funcao\r\nexport const SettingsIcon = styled(Settings)`\r\n  width: 16px;\r\n  height: 16px;\r\n  margin-left: 4px;\r\n  color: var(--symbol);\r\n  cursor: pointer;\r\n  transition: color 0.2s;\r\n\r\n   //Evento de hover vai mudar a cor\r\n  &:hover {\r\n    color: var(--white);\r\n  }\r\n`;","import React from 'react';\r\n\r\nimport { Container, HashtagIcon, InviteIcon, SettingsIcon } from './styles';\r\n\r\n//Criando as props que cada botao receberá\r\nexport interface Props {\r\n  channelName: string;\r\n  selected?: boolean;\r\n}\r\n\r\nconst ChannelButton: React.FC<Props> = ({ channelName, selected }) => {\r\n  return (\r\n   \r\n   <Container className={selected ? 'active' : ''}>\r\n      <div>\r\n        {/* \r\nColoca o icone de # e recebe o nome do canal nas props\r\n*/}\r\n        <HashtagIcon />\r\n        <span>{channelName}</span>\r\n      </div>\r\n\r\n      <div>\r\n\r\n        {/* \r\nColoca o icone de invite e o das settings no final do button\r\n*/}\r\n        <InviteIcon />\r\n        <SettingsIcon />\r\n      </div>\r\n    </Container>\r\n\r\n    \r\n  );\r\n};\r\n\r\nexport default ChannelButton;","import styled from 'styled-components';\r\nimport { Add } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n  grid-area: CL;\r\n  display: flex;\r\n\r\n\r\n  //Flex direction define o eixo principal e a direção (coluna ou linha por ex)\r\n  flex-direction: column;\r\n  padding: 24px 9.5px 0 16px;\r\n  background-color: var(--secondary);\r\n`;\r\n\r\nexport const Category = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 6px;\r\n\r\n\r\n  > span {\r\n    text-transform: uppercase;\r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    color: var(--gray);\r\n  }\r\n`;\r\n\r\n//Passa como funcao porque é um icone que vem da biblioteca lá\r\nexport const AddCategoryIcon = styled(Add)`\r\n  width: 21px;\r\n  height: 21px;\r\n  color: var(--symbol);\r\n  cursor: pointer;\r\n`;","import React from 'react';\r\n\r\nimport ChannelButton from '../ChannelButton';\r\n\r\nimport { Container, Category, AddCategoryIcon } from './styles';\r\n\r\nconst ChannelList: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <Category>\r\n        <span>Canais de texto</span>\r\n        <AddCategoryIcon />\r\n      </Category>\r\n\r\n{/* \r\n Cada botao desse é um canal, que esta dentro do componente da lista de canais\r\n*/}  \r\n      <ChannelButton channelName=\"chat-livre\" />\r\n      <ChannelButton channelName=\"trabalho\" />\r\n      <ChannelButton channelName=\"dota\" />\r\n      <ChannelButton channelName=\"csgo\" />\r\n      <ChannelButton channelName=\"reclamar-da-vida\" />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ChannelList;","import styled from 'styled-components';\r\nimport {Mic, Headset, Settings } from 'styled-icons/material';\r\n\r\n//No container a gente já coloca no grid-area a que foi declarada lá no Layout\r\nexport const Container = styled.div`\r\n  grid-area: UI;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 10px;\r\n  background-color: var(--quaternary);\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n`;\r\n\r\nexport const Profile = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  background-color: var(--gray);\r\n`;\r\n\r\nexport const UserData = styled.div`\r\n  margin-left: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  > strong {\r\n    color: var(--white);\r\n    font-size: 13px;\r\n    display: block;\r\n  }\r\n  > span {\r\n    color: var(--gray);\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nexport const Icons = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  //selecionando os icones exceto o primeiro\r\n  > svg:not(:first-child) {\r\n    margin-left: 7px;\r\n  }\r\n`;\r\n\r\nexport const MicIcon = styled(Mic)`\r\n  width: 20px;\r\n  height: 20px;\r\n  color: var(--white);\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n  transition: opacity 0.2s;\r\n \r\n //Acao\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const HeadphoneIcon = styled(Headset)`\r\n  width: 20px;\r\n  height: 20px;\r\n  color: var(--white);\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n  transition: opacity 0.2s;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const SettingsIcon = styled(Settings)`\r\n  width: 20px;\r\n  height: 20px;\r\n  color: var(--white);\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n  transition: opacity 0.2s;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;","import React from 'react';\r\n\r\nimport {\r\n  Container,\r\n  Profile,\r\n  Avatar,\r\n  UserData,\r\n  Icons,\r\n  MicIcon,\r\n  HeadphoneIcon,\r\n  SettingsIcon\r\n} from './styles';\r\n\r\n\r\nconst UserInfo: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <Profile>\r\n        <Avatar />\r\n        <UserData>\r\n          <strong>Arildo Magno</strong>\r\n          <span>#2689</span>\r\n        </UserData>\r\n      </Profile>\r\n\r\n      <Icons>\r\n        <MicIcon />\r\n        <HeadphoneIcon />\r\n        <SettingsIcon />\r\n      </Icons>\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default UserInfo;\r\n\r\n\r\n\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n //nome da area definida la no layout\r\n  grid-area: UL;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 3px 6px 0 16px;\r\n  background-color: var(--secondary);\r\n\r\n  //altura max - 46\r\n  max-height: calc(100vh - 46px);\r\n  overflow-y: scroll;\r\n \r\n \r\n //Configurações dos webkit (Personalizando)\r\n  ::-webkit-scrollbar {\r\n    width: 4px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: var(--tertiary);\r\n    border-radius: 4px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background-color: var(--secondary);\r\n  }\r\n`;\r\n\r\nexport const Role = styled.span`\r\n  margin-top: 20px;\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  color: var(--gray);\r\n`;\r\n\r\nexport const User = styled.div`\r\n  margin-top: 5px;\r\n  padding: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  border-radius: 4px;\r\n  background: transparent;\r\n  transition: background 0.2s;\r\n  \r\n  //Acao\r\n  &:hover {\r\n    background: rgba(255, 255, 255, 0.1);\r\n  }\r\n\r\n  //Acessando a tag strong dentro do component User\r\n  > strong {\r\n    margin-left: 13px;\r\n    font-weight: 500;\r\n    color: var(--white);\r\n    opacity: 0.7;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n  }\r\n\r\n    //Acessando a tag span dentro do component User\r\n  > span {\r\n    margin-left: 9px;\r\n    background-color: var(--discord);\r\n    color: var(--white);\r\n    border-radius: 4px;\r\n    padding: 4px 5px;\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 11px;\r\n  }\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n//evitar que o avatar fique zoado\r\n  flex-shrink: 0;\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 50%;\r\n  background-color: var(--primary);\r\n \r\n  //Se for bot\r\n  &.bot {\r\n    background-color: var(--mention-detail);\r\n  }\r\n`;","import React from 'react';\r\nimport { Container, Role, User, Avatar } from './styles';\r\n\r\ninterface UserProps {\r\n  nickname: string;\r\n  isBot?: boolean;\r\n}\r\n\r\n//Será usado abaixo esse component\r\nconst UserRow: React.FC<UserProps> = ({ nickname, isBot }) => {\r\n  return (\r\n    <User>\r\n      <Avatar className={isBot ? 'bot' : ''} />\r\n\r\n      <strong>{nickname}</strong>\r\n\r\n      {isBot && <span>Bot</span>}\r\n    </User>\r\n  );\r\n};\r\n\r\nconst UserList: React.FC = () => {\r\n  return (\r\n    <Container>\r\n      <Role>Disponível - 3</Role>\r\n      <UserRow nickname=\"Arildo Magno\" />\r\n      <UserRow nickname=\"Lulinha\" />\r\n      <UserRow nickname=\"Lelis\" />\r\n\r\n      <Role>Offline - 14</Role>\r\n      <UserRow nickname=\"NikoBot\" isBot />\r\n     \r\n      <UserRow nickname=\"Dilma\" />\r\n      <UserRow nickname=\"Bonoro\" />\r\n      <UserRow nickname=\"Zeca\" />\r\n      <UserRow nickname=\"Creyson\" />\r\n      <UserRow nickname=\"Brunao\" />\r\n      <UserRow nickname=\"Everthon\" />\r\n      <UserRow nickname=\"Manel\" />\r\n      <UserRow nickname=\"Fulano\" />\r\n      <UserRow nickname=\"Fulano\" />\r\n      <UserRow nickname=\"Fulano\" />\r\n      <UserRow nickname=\"Fulano\" />\r\n      <UserRow nickname=\"Fulano\" />\r\n      <UserRow nickname=\"Fulano\" />\r\n      <UserRow nickname=\"Fulano\" />\r\n      <UserRow nickname=\"Fulano\" />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import styled from 'styled-components';\r\n\r\n\r\n\r\nexport const Container = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n//cima direita baixo esquerda\r\npadding: 4px 16px;\r\nmargin-right: 4px;\r\nbackground-color: transparent;\r\n\r\n//Se tiver o parametro mention passado\r\n&.mention {\r\n  background-color: var(--mention-message);\r\n  border-left: 2px solid var(--mention-detail);\r\n  padding-left: 14px;\r\n}\r\n\r\n//Para que exceto a primeira,as divs tenham um espaçamento de 13px\r\n& + div {\r\n  margin-top: 13px;\r\n}\r\n\r\n`;\r\n\r\n\r\n\r\nexport const Avatar = styled.div`\r\nwidth: 40px;\r\nheight: 40px;\r\nbackground-color: var(--secondary);\r\nborder-radius: 50%;\r\n\r\n//Se passou como parametro que é bot\r\n&.bot {\r\n  background-color: var(--mention-detail);\r\n}\r\n`;\r\n\r\n\r\n\r\nexport const Message = styled.div`\r\nmin-height: 40px;\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: space-between;\r\nmargin-left: 17px;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\nexport const Header = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\n\r\n//Configuracao da tag strong dentro de header\r\n> strong {\r\n  color: var(--white);\r\n  font-size: 16px;\r\n}\r\n\r\n//Configuracao da tag span dentro de header\r\n> span {\r\n  margin-left: 6px;\r\n  background-color: var(--discord);\r\n  color: var(--white);\r\n  border-radius: 4px;\r\n  padding: 4px 5px;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  font-size: 11px;\r\n}\r\n\r\n//Configuracao da time strong dentro de header\r\n> time {\r\n  margin-left: 6px;\r\n  color: var(--gray);\r\n  font-size: 13px;\r\n}\r\n`;\r\n\r\n\r\n\r\nexport const Content = styled.div`\r\ntext-align: left;\r\nfont-size: 16px;\r\ncolor: var(--white);\r\n`;\r\n\r\n\r\n\r\nexport const Mention = styled.span`\r\ncolor: var(--link);\r\ncursor: pointer;\r\n//Acao de passar o mouse em cima\r\n&:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\n`;","import React from 'react';\r\n\r\nimport { Container, Avatar, Message, Header, Content } from './styles';\r\nexport { Mention } from './styles';\r\n\r\n//Propriedades que o componente mensagem vai receber\r\nexport interface Props {\r\n  author: string;\r\n  date: string;\r\n  content: string | React.ReactElement | React.ReactNode;\r\n  hasMention?: boolean;\r\n  isBot?: boolean;\r\n}\r\n\r\nconst ChannelMessage: React.FC<Props> = ({\r\n  author,\r\n  date,\r\n  content,\r\n  hasMention,\r\n  isBot,\r\n}) => {\r\n\r\n  return (\r\n\r\n    <Container className={hasMention ? 'mention' : ''}>\r\n      \r\n      {/*Se for bot passa como parâmetro que é */}\r\n      <Avatar className={isBot ? 'bot' : ''} />\r\n\r\n      <Message>\r\n\r\n        <Header>\r\n          <strong>{author}</strong>\r\n\r\n          {isBot && <span>Bot</span>}\r\n\r\n          <time>{date}</time>\r\n        </Header>\r\n        <Content>{content}</Content>\r\n\r\n      </Message>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ChannelMessage;","import styled from 'styled-components';\r\nimport { AlternateEmail } from 'styled-icons/material';\r\n\r\n\r\n//Declara a area declara lá no layout\r\nexport const Container = styled.div`\r\ngrid-area: CD;\r\n\r\ndisplay:flex;\r\n\r\n//porque ficam organizada como coluna\r\nflex-direction:column;\r\n\r\n//para dar espaço \r\njustify-content: space-between;\r\n\r\nbackground-color: var(--primary);\r\n`;\r\n\r\n\r\nexport const Messages = styled.div`\r\n  padding: 20px 0;\r\n  display: flex;\r\n\r\n  //porque ficam organizada como coluna\r\n  flex-direction: column;\r\n\r\n //tamanho total da tela -os tamanhos\r\n  max-height: calc(100vh - 46px - 68px);\r\n  overflow-y: scroll;\r\n\r\n\r\n  //ajustando itens do webkit como a scrollbar\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: var(--tertiary);\r\n    border-radius: 4px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    background-color: var(--secondary);\r\n  }\r\n\r\n\r\n`;\r\n\r\n//Container por volta do input\r\nexport const InputWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 0 16px;\r\n`;\r\n\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 44px;\r\n  padding: 0 10px 0 57px;\r\n  border-radius: 7px;\r\n\r\n  color: var(--white);\r\n  background-color: var(--chat-input);\r\n \r\n  position: relative;\r\n\r\n  //Evento do texto antes de digitar\r\n  &::placeholder {\r\n    color: var(--gray);\r\n  }\r\n\r\n\r\n  ~ svg {\r\n    position: relative;\r\n    top: -50%;\r\n    left: 14px;\r\n    transition: 180ms ease-in-out;\r\n  }\r\n\r\n  \r\n`;\r\n\r\n//Como é um icone passa pela função\r\nexport const InputIcon = styled(AlternateEmail)`\r\n  width: 24px;\r\n  height: 24px;\r\n  color: var(--gray);\r\n`;","import React, { useRef, useEffect } from 'react';\r\n\r\nimport ChannelMessage, { Mention } from '../ChannelMessage';\r\n\r\nimport { Container, Messages, InputWrapper, Input, InputIcon } from './styles';\r\n\r\nconst ChannelData: React.FC = () => {\r\n  //cria-se uma referencia de mensagem\r\n  const messagesRef = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\r\n  useEffect(() => {\r\n    const div = messagesRef.current;\r\n//se pegar a div\r\n    if (div) {\r\n      //o scroll recebe o tamanho do scroll, para ela ir direto para\r\n      //a ultima mensagem\r\n      div.scrollTop = div.scrollHeight;\r\n    }\r\n  }, [messagesRef]);\r\n\r\n  return (\r\n    <Container>\r\n      <Messages ref={messagesRef}>\r\n        {Array.from(Array(3).keys()).map((n) => (\r\n          <ChannelMessage\r\n            key={n}\r\n            author=\"Arildo Magno\"\r\n            date=\"07/01/2021\"\r\n            content=\"Sextou!\"\r\n          />\r\n        ))}\r\n\r\n        <ChannelMessage\r\n          author=\"Niko\"\r\n          date=\"07/01/2021\"\r\n          content={\r\n            <>\r\n              <Mention>@Arildo Magno</Mention>, me carrega no Dota de novo\r\n              por favor?\r\n            </>\r\n          }\r\n          hasMention\r\n          isBot\r\n        />\r\n      </Messages>\r\n\r\n      <InputWrapper>\r\n        <Input type=\"text\" placeholder=\"Conversarem #chat-livre\" />\r\n        <InputIcon />\r\n      </InputWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ChannelData;","import React from 'react';\r\n\r\nimport { Grid } from './styles';\r\n\r\nimport ServerList from '../ServerList';\r\nimport ServerName from '../ServerName';\r\nimport ChannelInfo from '../ChannelInfo';\r\nimport ChannelList from '../ChannelList';\r\nimport UserInfo from '../UserInfo';\r\nimport UserList from '../UserList';\r\nimport ChannelData from '../ChannelData';\r\n\r\n//Exportando com TS\r\nconst Layout: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                <ServerList />\r\n                <ServerName />\r\n                <ChannelInfo />\r\n                <ChannelList />\r\n                <UserInfo />\r\n                <ChannelData/>\r\n                <UserList />\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Layout;\r\n\r\n\r\n/*\r\nExportando com JS exemplo\r\nexport default function(){\r\n    return(<div>Ola</div>)\r\n}\r\n*/\r\n\r\n\r\n\r\n","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  html, body, #root {\r\n    height: 100%;\r\n  }\r\n  *, button, input {\r\n    border: 0;\r\n    outline: 0;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n  :root {\r\n    --primary: #36393f;\r\n    --secondary: #2f3136;\r\n    --tertiary: rgb(32,34,37);\r\n    --quaternary: #292b2f;\r\n    --quinary: #393d42;\r\n    --senary: #828386;\r\n    \r\n    --white: #fff;\r\n    --gray: #8a8c90;\r\n    --chat-input: rgb(64,68,75);\r\n    --symbol: #74777a;\r\n    --notification: #f84a4b;\r\n    --discord: #6e86d6;\r\n    --mention-detail: #f9a839;\r\n    --mention-message: #413f3f;\r\n    --link: #5d80d6;\r\n    --rocketseat: #6633cc;\r\n  }\r\n`;","import React from 'react';\r\n\r\nimport Layout from './components/Layout';\r\nimport GlobalStyles from './styles/GlobalStyles';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Layout />\r\n      <GlobalStyles />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}